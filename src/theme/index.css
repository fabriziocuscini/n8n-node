@import './tokens/index.css';

:root {
  color-scheme: dark;
  --opacity-disabled: 0.2;

  /* Node-specific tokens */
  --node-size: 100px;
  --node-selected-glow: var(--glow-lg);
  --node-radius: var(--radius-lg);
  --node-bg-gradient: linear-gradient(135deg, rgb(255 255 255 / 0.02) 0%, rgb(255 255 255 / 0) 100%),
    linear-gradient(135deg, rgb(31 28 31) 0%, rgb(20 20 20) 100%);
  --node-bg-inset-1: inset 1px 1px 4px 0 var(--color-white-alpha-20);
  --node-bg-inset-2: inset -1px -1px 2px 0 var(--color-black-alpha-50);
}

html,
body,
#root {
  display: flex;
  height: 100vh;
  width: 100vw;
  justify-content: center;
  align-items: center;
}

body {
  background-color: var(--color-bg-canvas);
  color: var(--color-fg-primary);
  font-family: 'Inter Variable', 'Inter', sans-serif;
  font-size: 1rem;
  letter-spacing: -0.025em;
  line-height: 1.2;
  font-weight: 400;
  font-style: normal;
  font-variant: normal;
  font-optical-sizing: auto;
  font-kerning: auto;
  font-feature-settings: 'liga' 1;
  font-variation-settings: 'wdth' 100;
}

button {
  border: none;
  background: none;
  padding: 0;
  margin: 0;
  cursor: pointer;
}

.nodeStack {
  display: flex;
  flex-direction: row;
  gap: var(--gap-4xl);
  justify-content: space-around;
  flex-wrap: wrap;
  flex-basis: 80vw;
}

.canvasNode {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;

  &:hover,
  &:focus-visible {
    outline: none;
    .node {
      box-shadow: var(--shadow-lg);
    }

    .handleConnector {
      opacity: 1;
    }

    .toolbar {
      opacity: 1;
    }
  }

  &__description {
    position: absolute;
    bottom: calc(var(--spacing-2) * -1);
    transform: translateY(100%);
    min-width: calc(var(--node-size) * 2);
    text-align: center;
    pointer-events: none;
    user-select: none;
  }

  &__name {
    margin-bottom: var(--spacing-1);
    font-size: 0.75rem;
    line-height: 1rem;
    font-weight: 700;
    color: var(--color-fg-primary);
  }

  &__subtitle {
    font-family: monospace;
    font-size: 0.6875rem;
    line-height: 0.75rem;
    font-weight: 400;
    color: var(--color-fg-secondary);
  }
}

.node {
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  width: var(--node-size);
  height: var(--node-size);
  border-radius: var(--node-radius);
  background: var(--node-bg-gradient);
  background-color: var(--color-black-alpha-90);
  border: 1px solid var(--color-status-default-outline);
  box-shadow: var(--shadow-md), var(--node-bg-inset-1), var(--node-bg-inset-2);
  transition: all var(--duration-moderate) ease-in-out;

  /* Pseudo-element to add glow effect when Node is selected */
  &:before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    box-shadow: none;
    border-radius: var(--node-radius);
    pointer-events: none;
    z-index: -1;
  }

  /* Subtle transition while hovering */
  &:hover {
    cursor: pointer;
    box-shadow: var(--shadow-lg);
  }

  /* Focus state matches hover for keyboard navigation */
  &:focus-visible {
    outline: none;
    transform: scale(var(--node-scaling-hover));
    box-shadow: var(--shadow-lg), var(--node-bg-inset-1), var(--node-bg-inset-2);
  }

  &--selected {
    &:before {
      box-shadow: var(--node-selected-glow);
    }
  }

  &__statusIcon {
    position: absolute;
    bottom: var(--spacing-2);
    right: var(--spacing-2);
    color: var(--color-status-default);
    width: 16px;
    height: 16px;

    &--pinned {
      color: var(--color-status-pinned);
    }

    &--success {
      color: var(--color-status-success);
    }

    &--issues {
      color: var(--color-status-issues);
    }

    &--deactivated {
      color: var(--color-status-deactivated);
    }
  }

  &--active {
    border-color: var(--color-status-default-outline);
  }

  &--pinned {
    border-color: var(--color-status-pinned-outline);
  }

  &--success {
    border-color: var(--color-status-success-outline);
  }

  &--issues {
    border-color: var(--color-status-issues-outline);
  }

  &--deactivated {
    border-color: var(--color-status-deactivated-outline);

    .node__serviceIcon {
      opacity: var(--opacity-disabled);
    }
  }
}

/* Handle Connector: a circular Icon Button to add a connector from one node to another */
.handleConnector {
  --handleConnector-size: 24px;
  display: flex;
  justify-content: center;
  align-items: center;
  width: var(--handleConnector-size);
  height: var(--handleConnector-size);
  border-radius: var(--radius-full);
  background-color: var(--color-grey);
  transition: background-color var(--duration-moderate) ease-in-out,
    opacity var(--duration-slow) ease-in-out var(--duration-faster);
  z-index: 10;
  position: absolute;
  right: calc(var(--handleConnector-size) / -2);
  top: calc(50% - var(--handleConnector-size) / 2);
  box-shadow: var(--shadow-md);
  opacity: 0;

  &:hover {
    cursor: pointer;
    background-color: var(--color-white);
  }

  &:active {
    transform: translateY(1px) translateX(1px);
  }

  &__icon {
    color: var(--color-black);
  }
}

.toolbar {
  --toolbar-button-size: 24px;
  opacity: 0;
  position: absolute;
  top: calc(var(--spacing-2) * -1);
  transform: translateY(-100%);
  display: flex;
  flex-direction: row;
  gap: 0;
  background-color: var(--color-gray-dark);
  border-radius: var(--radius-full);
  padding: var(--spacing-half);
  box-shadow: var(--shadow-md);
  transition: opacity var(--duration-moderate) ease-in-out var(--duration-faster);

  &__button {
    display: flex;
    justify-content: center;
    align-items: center;
    width: var(--toolbar-button-size);
    height: var(--toolbar-button-size);
    aspect-ratio: 1/1;
    border-radius: var(--radius-full);
    background-color: var(--color-transparent);
    color: var(--color-white);
    transition: background-color var(--duration-faster) ease-in-out;

    &:hover,
    &:focus-visible {
      cursor: pointer;
      background-color: var(--color-white-alpha-10);
    }
    &:active {
      outline: none;
      background-color: var(--color-white-alpha-20);
    }
  }
}

/* Respect user preference for reduced motion */
@media (prefers-reduced-motion: reduce) {
  .node {
    transition: none;

    &:hover,
    &:focus-visible {
      transform: none;
    }
  }
}
